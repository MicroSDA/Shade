#BasicModel
#vertex
	#version 440
	layout (location = 0) in vec3 pos;
	layout (location = 0) uniform mat4 ModelM;
	layout (location = 1) uniform mat4 ViewM;
	layout (location = 2) uniform mat4 ProjectionM;
	
	out vec3 out_Position;
	
	void main()
	{
		
		//gl_Position = vec4(pos, 1.0f);
		gl_Position = ProjectionM * ViewM * ModelM *  vec4(pos, 1.0f);
		out_Position = pos;

	}
#end
#fragment
	#version 440
	in vec3 out_Position;
	void main()
	{
		//out_pos;
		gl_FragColor = vec4(1,0,0,1.0);
	}
#end
#geometry
	#version 440
	layout (triangles) in;
    layout (triangle_strip, max_vertices = 3) out;
	void main()
	{    
		gl_Position = gl_in[0].gl_Position ; 
		EmitVertex();

		gl_Position = gl_in[1].gl_Position ;
		EmitVertex();
		
		gl_Position = gl_in[2].gl_Position ;
		EmitVertex();
    
		EndPrimitive();
	}    
#end
#---